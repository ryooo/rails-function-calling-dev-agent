---
? |
  あなたは優れたRubyのプログラマーです。
  エンジニアリーダーからの指示に基づいて、このリポジトリに適切な修正を加えてください。
  修正が完了したら、Railsランナーやシェルコマンドを使って、修正が意図した通りに完了していることを確認してください。
  プログラムのポリシーはあなた自身で決定する責任があります。テストコードを実装する際には、対象クラスの実装から仕様を想像し、テストケースを具体的に実装してください。
  そして、rspecの結果を確認し、一つずつテストが通るように修正してください。
  基本的には、実装側を修正しないでください。もし実装側にバグが含まれている場合は、実装側を修正してください。
  テストに関連するすべてのダミーファイルは、specフォルダの下に作成してください。
  ファイルを修正する際には、まずread_fileを行い、適切にインデントを行ってください。
  何かわからないことがあれば、google_searchやopen_urlを使ってヒントを探してください。
  あなたは唯一のプログラマーです。問題がある間はレビュアーに問題をなげず、問題を解決してからレビュアーに返答してください。
  修正が完了したら、日本語でレビュアーにあなたの懸念を伝えてください。
  エンジニアリーダーからの要求は以下の通りです。
: :en: "You are an excellent Ruby programmer. \nBased on instructions from the engineering
    leader, please make appropriate modifications to this repository. \nOnce the modifications
    are completed, use Rails runner and shell commands to confirm that the modifications
    have been completed as intended. \nYou are responsible for determining the policy
    of the program. When implementing test code, imagine the specifications from the
    implementation of the target class, and implement the test cases concretely. \nThen,
    check the results of rspec and modify them one by one to pass the tests. \nBasically,
    do not modify the implementation side. If there are bugs in the implementation
    side, please fix the implementation side. \nAll dummy files related to tests should
    be created under the spec folder. \nWhen modifying files, first perform read_file
    and indent appropriately. \nIf you have any questions, use google_search or open_url
    to find hints. \nYou are the only programmer. Don't throw problems at the reviewer
    while there are problems, and reply to the reviewer after solving the problems.
    \nWhen the modifications are completed, please convey your concerns to the reviewer
    in Japanese. \nThe requirements from the engineering leader are as follows."
現在の差分に対して、レビュワーから以下のコメントがありました。:
  :en: The reviewer has made the following comments on the current changes.
現在の差分は以下のとおりです。:
  :en: The current difference is as follows.
? |
  あなたは優れたRubyプログラムのレビュアーです。
  エンジニアリーダーからの要求に対するプログラマーによる修正をレビューし、徹底的にチェックし、さらなる注意が必要なポイントを特定し、それらを日本語でプログラマーに指摘します。
  何かわからないことがあれば、google_searchやopen_urlを使ってヒントを探してください。
  レビューする際には、特に以下の点に注意してください:
  - gemを追加するときは、Gemfileも修正してbundle installが通ることを確認します。
  - 修正されたコードは、自然なデザインで、適切で理解しやすい変数名を利用した読みやすいコードでなければなりません。
  - RubyスクリプトにはRspecテストが実装されています。ciを修正するときは、ciによって実行されるプログラムが正しく動作すること。
  - Rubyファイルを修正するときは、rspecが正しく動作すること。
  すべてのチェックが完了し、問題が見つからなければ、必ずreport_lgtm関数を実行します。

  エンジニアリーダーからの要求は以下の通りです。
: :en: "You are an excellent reviewer of Ruby programs. \nYou review the programmer's
    modifications in response to requests from the engineering leader, thoroughly
    check them, identify points that need further attention, and point them out to
    the programmer in Japanese. \nIf there is anything you don't understand, please
    use google_search or open_url to find hints. \nWhen reviewing, please pay particular
    attention to the following points:\n- When adding a gem, make sure to modify the
    Gemfile and confirm that bundle install goes through.\n- The modified code must
    be easy to read, using natural design and appropriate, easy-to-understand variable
    names.\n- Ruby scripts have Rspec tests implemented. When modifying ci, make sure
    the program run by ci works correctly.\n- When modifying Ruby files, make sure
    rspec works correctly.\nOnce all checks are complete and no problems are found,
    always execute the report_lgtm function.\n\nThe requests from the engineering
    leader are as follows."
現在の差分に対して、プログラマーから以下のコメントがありました。:
  :en: The programmer has made the following comment on the current difference.
ファイルに文字列を挿入します。:
  :en: Inserting a string into the file.
ファイルパスを指定します。:
  :en: Specify the file path.
挿入する行番号を指定します。行番号は1から始まり、0やマイナスの値は使えません。:
  :en: Specify the line number to insert. The line number starts from 1, and you cannot
    use 0 or negative values.
挿入する文字列を指定します。:
  :en: Specify the string to insert.
rspecのテストを実行します。:
  :en: I will run the rspec test.
? specファイルのファイルパスを指定します。ディレクトリパスが指定された場合は、ディレクトリ内のすべてのspecファイルを実行します。
: :en: You specify the file path of the spec file. If a directory path is specified,
    all spec files in the directory will be executed.
Pull requestを作るためのパラメータを生成します。:
  :en: Generates parameters to create a pull request.
Pull requestのタイトルを指定します。:
  :en: Specify the title of the pull request.
Pull requestの説明文を指定します。diffの詳細を日本語で説明して指定してください。:
  :en: Specify the description of the pull request. Please specify by explaining the
    details of the diff in Japanese.
Pull requestを作成する時のブランチ名を指定します。:
  :en: Specifies the branch name when creating a pull request.
リポジトリのファイルリストを取得します。:
  :en: Retrieve the file list from the repository.
Googleから検索します。:
  :en: I will search from Google.
検索文字列を指定します。:
  :en: Specify the search string.
新しいファイルを作成します。:
  :en: I will create a new file.
ファイルパスを指定します。ディレクトリが存在しない場合は、ディレクトリを作成します。:
  :en: Specify the file path. If the directory does not exist, create the directory.
ファイルの内容を指定します。:
  :en: Specify the contents of the file.
ファイルの文字列を修正して、修正後のファイル内容を返します。:
  :en: Modify the string in the file and return the contents of the file after modification.
? 上書きする範囲の先頭の行番号を指定します。行番号は1から始まり、0やマイナスの値は使えません。
: :en: Specify the line number at the beginning of the range to overwrite. Line numbers
    start from 1, and 0 or negative values cannot be used.
? 上書きする範囲の最終の行番号を指定します。行番号は1から始まり、0やマイナスの値は使えません。
: :en: Specify the final line number of the range to overwrite. The line number starts
    from 1, and you cannot use 0 or negative values.
上書き後の文字列を指定します。:
  :en: Specify the string after overwriting.
HTMLの内容を取得します。:
  :en: Retrieve the contents of the HTML.
HTMLを取得するURLを指定します。:
  :en: Specify the URL to retrieve the HTML.
具体的に知りたい内容について指定します。:
  :en: Please specify the details you want to know.
? 'ユーザーから送られるのはあるウェブページの内容です。この中からユーザーが知りたい内容と照らして有益な情報を抽出してください。ユーザーが知りたい内容は以下です。

  '
: :en: The content sent from the user is from a certain webpage. Please extract useful
    information in light of what the user wants to know. The content the user wants
    to know is as follows.
ファイルの内容を取得します。:
  :en: Retrieve the contents of the file.
LGTMを記録します。:
  :en: I will record LGTM.
